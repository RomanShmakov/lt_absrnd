<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">C:\jmeter\jmeter_scripts\jdbc\ydb-jdbc-driver-shaded-2.3.15.jar</stringProp>
    </TestPlan>
    <hashTree>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="connectionProperties"></stringProp>
        <stringProp name="dataSource">ydb_connection</stringProp>
        <stringProp name="dbUrl">jdbc:ydb:grpcs://rnd-ydb1.dev.moscow.alfaintra.net:2136/Root/asdb?secureConnectionCertificate=file:C:/git/lt/uc/ca.crt</stringProp>
        <stringProp name="driver">tech.ydb.jdbc.YdbDriver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">Pa$$w0rd</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">user1</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="_______________DEBUG_______________" enabled="false"/>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TG">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="REFRESH BD"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CLEAN DB" enabled="false"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="uc1_jdbc_drop_table" enabled="true">
              <stringProp name="dataSource">ydb_connection</stringProp>
              <stringProp name="query">drop table `benchmark/counter`</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="uc2_jdbc_drop_table" enabled="true">
              <stringProp name="dataSource">ydb_connection</stringProp>
              <stringProp name="query">drop table `benchmark/counters_group`</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="LC11" enabled="true">
              <stringProp name="LoopController.loops">11</stringProp>
            </LoopController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="uc3_jdbc_drop_tables" enabled="true">
                <stringProp name="dataSource">ydb_connection</stringProp>
                <stringProp name="query">drop table `benchmark/counters_group_insert/counters_${__counter(,)}`</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="LC11" enabled="true">
              <stringProp name="LoopController.loops">11</stringProp>
            </LoopController>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="uc4_jdbc_drop_tables" enabled="true">
                <stringProp name="dataSource">ydb_connection</stringProp>
                <stringProp name="query">drop table `benchmark/counters_group_update/counters_${__counter(,)}`</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="PREPARED TEST"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="UC1" enabled="false"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="uc1_jdbc_create_table" enabled="true">
                <stringProp name="dataSource">ydb_connection</stringProp>
                <stringProp name="query">CREATE TABLE `benchmark/counter` (id Int64 NOT NULL, value Int64 NOT NULL, PRIMARY KEY (id))</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="uc1_jdbc_upsert" enabled="true">
                <stringProp name="dataSource">ydb_connection</stringProp>
                <stringProp name="query">UPSERT INTO `benchmark/counter` (`id`, `value` ) VALUES (1 , 1);</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames"></stringProp>
              </JDBCSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="UC2" enabled="false"/>
            <hashTree>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="uc2_jdbc_create_table">
                <stringProp name="dataSource">ydb_connection</stringProp>
                <stringProp name="query">CREATE TABLE `benchmark/counters_group` (id Int64 NOT NULL, value Int64 NOT NULL, PRIMARY KEY (id))</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Update Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames"></stringProp>
              </JDBCSampler>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="LC50" enabled="true">
                <stringProp name="LoopController.loops">50</stringProp>
              </LoopController>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="uc2_jdbc_upsert" enabled="true">
                  <stringProp name="dataSource">ydb_connection</stringProp>
                  <stringProp name="query">UPSERT INTO `benchmark/counters_group` ( `id`, `value` ) VALUES ((${__jm__LC50__idx}+1) , (${__jm__LC50__idx}+1))
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="UC3" enabled="false"/>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="LC11" enabled="true">
                <stringProp name="LoopController.loops">11</stringProp>
              </LoopController>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="uc3_jdbc_create_tables" enabled="true">
                  <stringProp name="dataSource">ydb_connection</stringProp>
                  <stringProp name="query">create table `benchmark/counters_group_insert/counters_${__counter(true,counter3)}` (id Int64 NOT NULL, value Int64 NOT NULL, PRIMARY KEY (id))</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="UC4"/>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="LC11" enabled="true">
                <stringProp name="LoopController.loops">11</stringProp>
              </LoopController>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="uc4_jdbc_create_tables" enabled="true">
                  <stringProp name="dataSource">ydb_connection</stringProp>
                  <stringProp name="query">create table `benchmark/counters_group_update/counters_${__counter(true,counter4)}` (id Int64 NOT NULL, value Int64 NOT NULL, PRIMARY KEY (id))</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Update Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="LC11" enabled="true">
                <stringProp name="LoopController.loops">11</stringProp>
              </LoopController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="LC50" enabled="true">
                  <stringProp name="LoopController.loops">50</stringProp>
                </LoopController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="uc4_jdbc_upsert_tables" enabled="true">
                    <stringProp name="dataSource">ydb_connection</stringProp>
                    <stringProp name="query">UPSERT INTO `benchmark/counters_group_update/counters_${__groovy(${__jm__LC11__idx}+1,)}` ( `id`, `value` ) VALUES ((${__jm__LC50__idx}+1) , (${__jm__LC50__idx}+1))</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Update Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                  </JDBCSampler>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="UC1" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="2702">UC</stringProp>
            <stringProp name="83811">UC1</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="UC2" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="2702">UC</stringProp>
            <stringProp name="83812">UC2</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="UC3" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="2702">UC</stringProp>
            <stringProp name="83813">UC3</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="UC4" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="764597751">Test Plan</stringProp>
            <stringProp name="2702">UC</stringProp>
            <stringProp name="83814">UC4</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <com.github.johrstrom.listener.PrometheusListener guiclass="com.github.johrstrom.listener.gui.PrometheusListenerGui" testclass="com.github.johrstrom.listener.PrometheusListener" testname="Prometheus Listener" enabled="false">
          <collectionProp name="prometheus.collector_definitions">
            <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
              <stringProp name="collector.help">response time histogram</stringProp>
              <stringProp name="collector.metric_name">jmeter_rt_summary_as_hist</stringProp>
              <stringProp name="collector.type">HISTOGRAM</stringProp>
              <collectionProp name="collector.labels">
                <stringProp name="102727412">label</stringProp>
              </collectionProp>
              <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
            </elementProp>
            <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
              <stringProp name="collector.help">response time summary</stringProp>
              <stringProp name="collector.metric_name">jmeter_rt_summary</stringProp>
              <stringProp name="collector.type">SUMMARY</stringProp>
              <collectionProp name="collector.labels">
                <stringProp name="50511102">category</stringProp>
                <stringProp name="102727412">label</stringProp>
                <stringProp name="3059181">code</stringProp>
              </collectionProp>
              <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
              <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
            </elementProp>
            <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
              <stringProp name="collector.help">response size</stringProp>
              <stringProp name="collector.metric_name">jmeter_rsize_as_hist</stringProp>
              <stringProp name="collector.type">HISTOGRAM</stringProp>
              <collectionProp name="collector.labels"/>
              <stringProp name="collector.quantiles_or_buckets">100,500,1000,3000</stringProp>
              <stringProp name="listener.collector.measuring">ResponseSize</stringProp>
            </elementProp>
            <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
              <stringProp name="collector.help">all code and count</stringProp>
              <stringProp name="collector.metric_name">jmeter_count_total</stringProp>
              <stringProp name="collector.type">COUNTER</stringProp>
              <collectionProp name="collector.labels">
                <stringProp name="102727412">label</stringProp>
                <stringProp name="3059181">code</stringProp>
              </collectionProp>
              <stringProp name="collector.quantiles_or_buckets"></stringProp>
              <stringProp name="listener.collector.measuring">CountTotal</stringProp>
            </elementProp>
            <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
              <stringProp name="collector.help">success total</stringProp>
              <stringProp name="collector.metric_name">jmeter_success_total</stringProp>
              <stringProp name="collector.type">COUNTER</stringProp>
              <collectionProp name="collector.labels">
                <stringProp name="102727412">label</stringProp>
                <stringProp name="3059181">code</stringProp>
              </collectionProp>
              <stringProp name="collector.quantiles_or_buckets"></stringProp>
              <stringProp name="listener.collector.measuring">SuccessTotal</stringProp>
            </elementProp>
            <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
              <stringProp name="collector.help">success ratio</stringProp>
              <stringProp name="collector.metric_name">jmeter_success_ratio</stringProp>
              <stringProp name="collector.type">SUCCESS_RATIO</stringProp>
              <collectionProp name="collector.labels">
                <stringProp name="102727412">label</stringProp>
                <stringProp name="3059181">code</stringProp>
              </collectionProp>
              <stringProp name="collector.quantiles_or_buckets"></stringProp>
              <stringProp name="listener.collector.measuring">SuccessRatio</stringProp>
            </elementProp>
            <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
              <stringProp name="collector.help">idle time</stringProp>
              <stringProp name="collector.metric_name">jmeter_idle_time</stringProp>
              <stringProp name="collector.type">SUMMARY</stringProp>
              <collectionProp name="collector.labels"/>
              <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
              <stringProp name="listener.collector.measuring">IdleTime</stringProp>
            </elementProp>
            <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
              <stringProp name="collector.help">failure total</stringProp>
              <stringProp name="collector.metric_name">jmeter_failure_total</stringProp>
              <stringProp name="collector.type">COUNTER</stringProp>
              <collectionProp name="collector.labels">
                <stringProp name="102727412">label</stringProp>
              </collectionProp>
              <stringProp name="collector.quantiles_or_buckets"></stringProp>
              <stringProp name="listener.collector.measuring">FailureTotal</stringProp>
            </elementProp>
            <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
              <stringProp name="collector.help">response time counter</stringProp>
              <stringProp name="collector.metric_name">jmeter_rt_counter</stringProp>
              <stringProp name="collector.type">SUMMARY</stringProp>
              <collectionProp name="collector.labels"/>
              <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
              <stringProp name="listener.collector.measuring">ResponseTime</stringProp>
            </elementProp>
            <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
              <stringProp name="collector.help">latency summary</stringProp>
              <stringProp name="collector.metric_name">jmeter_latency_summary</stringProp>
              <stringProp name="collector.type">SUMMARY</stringProp>
              <collectionProp name="collector.labels"/>
              <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
              <stringProp name="listener.collector.measuring">Latency</stringProp>
            </elementProp>
            <elementProp name="" elementType="com.github.johrstrom.listener.ListenerCollectorConfig">
              <stringProp name="collector.help">connect time</stringProp>
              <stringProp name="collector.metric_name">jmeter_connect_time</stringProp>
              <stringProp name="collector.type">SUMMARY</stringProp>
              <collectionProp name="collector.labels"/>
              <stringProp name="collector.quantiles_or_buckets">0.75,0.5|0.95,0.1|0.99,0.01</stringProp>
              <stringProp name="listener.collector.measuring">ConnectTime</stringProp>
            </elementProp>
          </collectionProp>
        </com.github.johrstrom.listener.PrometheusListener>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="_______________UC_______________" enabled="false"/>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="UC" enabled="false"/>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="UC1" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="uc1_jdbc_upsert" enabled="true">
            <stringProp name="dataSource">ydb_connection</stringProp>
            <stringProp name="query">UPSERT INTO `benchmark/counter` ( `id`, `value` ) VALUES (1 , ${__Random(1,2147483647,)})</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames"></stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="UC2" enabled="true"/>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="LC2" enabled="true">
            <stringProp name="LoopController.loops">2</stringProp>
          </LoopController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="uc2_jdbc_upsert" enabled="true">
              <stringProp name="dataSource">ydb_connection</stringProp>
              <stringProp name="query">UPSERT INTO `benchmark/counters_group` ( `id`, `value` ) VALUES (${__Random(1,50,)} , ${__Random(1,2147483647,)})</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="UC3" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="uc3_jdbc_upsert" enabled="true">
            <stringProp name="dataSource">ydb_connection</stringProp>
            <stringProp name="query">UPSERT INTO `benchmark/counters_group_insert/counters_${__groovy(${__threadNum} % 11 + 1,)}` ( `id`, `value` ) VALUES (${__Random(1,2147483647,)} , ${__Random(1,2147483647,)})</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames"></stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="UC4" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="uc4_jdbc_upsert" enabled="true">
            <stringProp name="dataSource">ydb_connection</stringProp>
            <stringProp name="query">UPSERT INTO `benchmark/counters_group_update/counters_${__groovy(${__threadNum} % 11 + 1,)}` ( `id`, `value` ) VALUES (${__Random(1,50,)} , ${__Random(1,2147483647,)})</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames"></stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
