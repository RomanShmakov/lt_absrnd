syntax = "proto3";

package absrnd_mvp.remains;

import "absrnd_mvp.proto";
import "absrnd_mvp.hold.remains.proto";
import "absrnd_mvp.posting.remains.proto";

message Request {
  optional string idempotency_key = 1; // Ключ идемпотентности в формате UUID. Задается для POST и DELETE, и отсутствует для ROLLBACK.
  TransactionType transaction_type = 2; // Тип транзакции
  ActionType action_type = 3; // Тип действия
  string response_topic = 4; // Топик для ответа по результатам обработки транзакции	
  optional string additional_info = 5; // Дополнительная информация в формате json

  oneof payload {
    absrnd_mvp.posting.remains.RequestPayload funds_movement_payload = 6;
    absrnd_mvp.hold.remains.RequestPayload hold_payload = 7;
  }
}

// Статус выполнения учета
// Положительные статусы в диапозоне от 0 до 999
// Системная ошибка в диапозоне от 1000 до 1999
// Ошибка бизнес-логики от 2000 до 2999
enum ResultStatus {
  CHANGE_STATUS_SUCCESS = 0;
  CHANGE_STATUS_POSTED_ALREADY = 1;
  CHANGE_STATUS_SYSTEM_ERROR = 1000;
  CHANGE_STATUS_BUSINESS_ERROR = 2000;
}

message Response {
  optional string idempotency_key = 1; // Ключ идемпотентности в формате UUID
  TransactionType transaction_type = 2; // Тип транзакции
  ActionType action_type = 3; // Тип действия
  ResultStatus result_status = 4; // Статус операции
  optional string result_description = 5; // Сообщение

  oneof payload {
    absrnd_mvp.posting.remains.ResponsePayload funds_movement_payload = 6;
    absrnd_mvp.hold.remains.ResponsePayload hold_payload = 7;
  }
}
