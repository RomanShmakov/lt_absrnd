syntax = "proto3";

package absrnd_mvp.account.mainapp;

import "google/protobuf/timestamp.proto";

message AccountRequest {
  string account_number = 1;
}

message AccountResponse {

  // Статус выполнения получения информации о счете
  // Положительные статусы в диапозоне от 0 до 999
  // Системная ошибка в диапозоне от 1000 до 1999
  // Ошибка бизнес-логики от 2000 до 2999
  enum ResultStatus {
    RESULT_STATUS_SUCCESS = 0;
    RESULT_STATUS_SYSTEM_ERROR = 1000;
    RESULT_STATUS_MISSING_ACCOUNT_NUMBER = 2000;
    RESULT_STATUS_ACCOUNT_NOT_FOUND = 2002; 
  }

  message Account {
    optional string customer_id = 1;
    string account_number = 2;
    string ccy = 3;
    string filial = 4;
    string branch = 5;
    string group = 6;
    string description = 7;
    google.protobuf.Timestamp open_date = 8;
    optional google.protobuf.Timestamp close_date = 9;
    bool is_active = 10;
    bool is_blocked_debit = 11;
    bool is_blocked_credit = 12;
    bool is_blocked = 13;
  }
  
  ResultStatus result_status = 1; // Статус операции
  optional string result_description = 2; // Сообщение об ошибке
  optional Account account = 3;
}

service AccountService {
  rpc Get(AccountRequest) returns(AccountResponse) {}
}
